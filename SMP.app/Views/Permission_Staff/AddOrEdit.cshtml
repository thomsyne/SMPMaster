@model SMP.app.Models.Permission_Staff

@{
    ViewBag.Title = "AddOrEdit";
}
    <div class="x_panel">
        <div class="x_title">
            <a class="btn-sm btn-primary" id="" href="@Url.Action("Index","Permission_Staff")"><i class="fa fa-arrow-left"></i>Back</a>
        </div>

        <div class="x_content">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.SchoolId, ViewBag.School_DetailsList as SelectList, "-- Select School --", new { @class = "form-control select2 input", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.StaffId, ViewBag.StaffList as SelectList, "-- Select Staff --", new { @class = "form-control select2 input", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Permission_Sought, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Permission_Sought, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Permission_Sought, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Approval_Status, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Approval_Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Approval_Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Supporting_Filepath, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Supporting_Filepath, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.Supporting_Filepath, "", new { @class = "text-danger" })*@

                                <input type="file" name ="Alternative" accept="file/pdf, file/docx"/>
                            </div>
                        </div>
                    </div>






                    <div class="clearfix"></div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="text-align:center;margin:10px;">
                            <input type="submit" value="Save" class="btn-sm btn-success fa fa-check" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

@section Scripts {

}