@model SMP.app.Models.Grading

@{
    ViewBag.Title = "AddOrEdit";
}
    <div class="x_panel">
        <div class="x_title">
            <a class="btn-sm btn-primary" id="" href="@Url.Action("Index","Grading")"><i class="fa fa-arrow-left"></i>Back</a>
        </div>

        <div class="x_content">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.SchoolId, ViewBag.School_DetailsList as SelectList, "-- Select School --", new { @class = "form-control select2 input", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Exam_TypeId, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.Exam_TypeId, ViewBag.Exam_TypeList as SelectList, "-- Select Exam Type --", new { @class = "form-control select2 input", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.Exam_TypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Grade_Min, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Grade_Min, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Grade_Min, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Grade_Max, htmlAttributes: new { @class = "control-label col-md-4 col-md-4 col-md-4 col-sm-3 col-xs-12" })
                            <div class="col-md-8 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Grade_Max, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Grade_Max, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                   

                    <div class="clearfix"></div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="margin-top:10px; text-align:center">
                            <input type="submit" value="Save" class="btn-sm btn-success" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>

@section Scripts {

}
